# Predictive Model Implementation and Evaluation

## Import Required Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

## Load Dataset
# Load the provided dataset
file_path = r'C:\Users\gowth\hello\python projects\CODTECH\emails.csv'
data = pd.read_csv(file_path)

# The dataset has numerical features and a 'Prediction' column for labels
X = data.drop(columns=['Email No.', 'Prediction'])
y = data['Prediction']

# Split data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

## Train a Multinomial Naive Bayes Model
model = MultinomialNB()
model.fit(X_train, y_train)

## Make Predictions
y_pred = model.predict(X_test)

## Evaluate the Model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.2f}")
print("Classification Report:")
print(classification_report(y_test, y_pred))

## Example Prediction
# Example: Replace with actual numerical input for prediction if available
example_email_features = [0] * X.shape[1]  # Placeholder; replace with real feature values
prediction = model.predict([example_email_features])
print("Prediction for example email:", "Spam" if prediction[0] == 1 else "Not Spam")
